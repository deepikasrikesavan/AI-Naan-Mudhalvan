{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.10","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"from sklearn.model_selection import train_test_split\nfrom tensorflow.keras.layers import Input, Dense\nfrom tensorflow.keras.optimizers import Adam\nfrom tensorflow.keras import Sequential\nfrom sklearn.metrics import r2_score\nfrom matplotlib import pyplot as plt\nimport pandas as pd\nimport numpy as np","metadata":{"execution":{"iopub.status.busy":"2023-05-11T08:19:25.045899Z","iopub.execute_input":"2023-05-11T08:19:25.049271Z","iopub.status.idle":"2023-05-11T08:19:34.303169Z","shell.execute_reply.started":"2023-05-11T08:19:25.049219Z","shell.execute_reply":"2023-05-11T08:19:34.302285Z"},"trusted":true},"execution_count":1,"outputs":[{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/scipy/__init__.py:146: UserWarning: A NumPy version >=1.16.5 and <1.23.0 is required for this version of SciPy (detected version 1.23.5\n  warnings.warn(f\"A NumPy version >={np_minversion} and <{np_maxversion}\"\n","output_type":"stream"}]},{"cell_type":"code","source":"df = pd.read_csv('/kaggle/input/house-price-dataset-of-india/House Price India.csv')\ndf.drop(['id','Date'], axis=1, inplace=True)\ndf.head()","metadata":{"execution":{"iopub.status.busy":"2023-05-11T08:22:25.955579Z","iopub.execute_input":"2023-05-11T08:22:25.956001Z","iopub.status.idle":"2023-05-11T08:22:26.074442Z","shell.execute_reply.started":"2023-05-11T08:22:25.955966Z","shell.execute_reply":"2023-05-11T08:22:26.073384Z"},"trusted":true},"execution_count":2,"outputs":[{"execution_count":2,"output_type":"execute_result","data":{"text/plain":"   number of bedrooms  number of bathrooms  living area  lot area  \\\n0                   5                 2.50         3650      9050   \n1                   4                 2.50         2920      4000   \n2                   5                 2.75         2910      9480   \n3                   4                 2.50         3310     42998   \n4                   3                 2.00         2710      4500   \n\n   number of floors  waterfront present  number of views  \\\n0               2.0                   0                4   \n1               1.5                   0                0   \n2               1.5                   0                0   \n3               2.0                   0                0   \n4               1.5                   0                0   \n\n   condition of the house  grade of the house  \\\n0                       5                  10   \n1                       5                   8   \n2                       3                   8   \n3                       3                   9   \n4                       4                   8   \n\n   Area of the house(excluding basement)  ...  Built Year  Renovation Year  \\\n0                                   3370  ...        1921                0   \n1                                   1910  ...        1909                0   \n2                                   2910  ...        1939                0   \n3                                   3310  ...        2001                0   \n4                                   1880  ...        1929                0   \n\n   Postal Code  Lattitude  Longitude  living_area_renov  lot_area_renov  \\\n0       122003    52.8645   -114.557               2880            5400   \n1       122004    52.8878   -114.470               2470            4000   \n2       122004    52.8852   -114.468               2940            6600   \n3       122005    52.9532   -114.321               3350           42847   \n4       122006    52.9047   -114.485               2060            4500   \n\n   Number of schools nearby  Distance from the airport    Price  \n0                         2                         58  2380000  \n1                         2                         51  1400000  \n2                         1                         53  1200000  \n3                         3                         76   838000  \n4                         1                         51   805000  \n\n[5 rows x 21 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>number of bedrooms</th>\n      <th>number of bathrooms</th>\n      <th>living area</th>\n      <th>lot area</th>\n      <th>number of floors</th>\n      <th>waterfront present</th>\n      <th>number of views</th>\n      <th>condition of the house</th>\n      <th>grade of the house</th>\n      <th>Area of the house(excluding basement)</th>\n      <th>...</th>\n      <th>Built Year</th>\n      <th>Renovation Year</th>\n      <th>Postal Code</th>\n      <th>Lattitude</th>\n      <th>Longitude</th>\n      <th>living_area_renov</th>\n      <th>lot_area_renov</th>\n      <th>Number of schools nearby</th>\n      <th>Distance from the airport</th>\n      <th>Price</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>5</td>\n      <td>2.50</td>\n      <td>3650</td>\n      <td>9050</td>\n      <td>2.0</td>\n      <td>0</td>\n      <td>4</td>\n      <td>5</td>\n      <td>10</td>\n      <td>3370</td>\n      <td>...</td>\n      <td>1921</td>\n      <td>0</td>\n      <td>122003</td>\n      <td>52.8645</td>\n      <td>-114.557</td>\n      <td>2880</td>\n      <td>5400</td>\n      <td>2</td>\n      <td>58</td>\n      <td>2380000</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>4</td>\n      <td>2.50</td>\n      <td>2920</td>\n      <td>4000</td>\n      <td>1.5</td>\n      <td>0</td>\n      <td>0</td>\n      <td>5</td>\n      <td>8</td>\n      <td>1910</td>\n      <td>...</td>\n      <td>1909</td>\n      <td>0</td>\n      <td>122004</td>\n      <td>52.8878</td>\n      <td>-114.470</td>\n      <td>2470</td>\n      <td>4000</td>\n      <td>2</td>\n      <td>51</td>\n      <td>1400000</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>5</td>\n      <td>2.75</td>\n      <td>2910</td>\n      <td>9480</td>\n      <td>1.5</td>\n      <td>0</td>\n      <td>0</td>\n      <td>3</td>\n      <td>8</td>\n      <td>2910</td>\n      <td>...</td>\n      <td>1939</td>\n      <td>0</td>\n      <td>122004</td>\n      <td>52.8852</td>\n      <td>-114.468</td>\n      <td>2940</td>\n      <td>6600</td>\n      <td>1</td>\n      <td>53</td>\n      <td>1200000</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>2.50</td>\n      <td>3310</td>\n      <td>42998</td>\n      <td>2.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>3</td>\n      <td>9</td>\n      <td>3310</td>\n      <td>...</td>\n      <td>2001</td>\n      <td>0</td>\n      <td>122005</td>\n      <td>52.9532</td>\n      <td>-114.321</td>\n      <td>3350</td>\n      <td>42847</td>\n      <td>3</td>\n      <td>76</td>\n      <td>838000</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>3</td>\n      <td>2.00</td>\n      <td>2710</td>\n      <td>4500</td>\n      <td>1.5</td>\n      <td>0</td>\n      <td>0</td>\n      <td>4</td>\n      <td>8</td>\n      <td>1880</td>\n      <td>...</td>\n      <td>1929</td>\n      <td>0</td>\n      <td>122006</td>\n      <td>52.9047</td>\n      <td>-114.485</td>\n      <td>2060</td>\n      <td>4500</td>\n      <td>1</td>\n      <td>51</td>\n      <td>805000</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows Ã— 21 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"df.info()","metadata":{"execution":{"iopub.status.busy":"2023-05-11T08:22:50.177351Z","iopub.execute_input":"2023-05-11T08:22:50.177925Z","iopub.status.idle":"2023-05-11T08:22:50.200648Z","shell.execute_reply.started":"2023-05-11T08:22:50.177892Z","shell.execute_reply":"2023-05-11T08:22:50.199635Z"},"trusted":true},"execution_count":3,"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 14620 entries, 0 to 14619\nData columns (total 21 columns):\n #   Column                                 Non-Null Count  Dtype  \n---  ------                                 --------------  -----  \n 0   number of bedrooms                     14620 non-null  int64  \n 1   number of bathrooms                    14620 non-null  float64\n 2   living area                            14620 non-null  int64  \n 3   lot area                               14620 non-null  int64  \n 4   number of floors                       14620 non-null  float64\n 5   waterfront present                     14620 non-null  int64  \n 6   number of views                        14620 non-null  int64  \n 7   condition of the house                 14620 non-null  int64  \n 8   grade of the house                     14620 non-null  int64  \n 9   Area of the house(excluding basement)  14620 non-null  int64  \n 10  Area of the basement                   14620 non-null  int64  \n 11  Built Year                             14620 non-null  int64  \n 12  Renovation Year                        14620 non-null  int64  \n 13  Postal Code                            14620 non-null  int64  \n 14  Lattitude                              14620 non-null  float64\n 15  Longitude                              14620 non-null  float64\n 16  living_area_renov                      14620 non-null  int64  \n 17  lot_area_renov                         14620 non-null  int64  \n 18  Number of schools nearby               14620 non-null  int64  \n 19  Distance from the airport              14620 non-null  int64  \n 20  Price                                  14620 non-null  int64  \ndtypes: float64(4), int64(17)\nmemory usage: 2.3 MB\n","output_type":"stream"}]},{"cell_type":"code","source":"df.isna().sum()","metadata":{"execution":{"iopub.status.busy":"2023-05-11T08:23:07.151738Z","iopub.execute_input":"2023-05-11T08:23:07.152135Z","iopub.status.idle":"2023-05-11T08:23:07.162849Z","shell.execute_reply.started":"2023-05-11T08:23:07.152086Z","shell.execute_reply":"2023-05-11T08:23:07.161636Z"},"trusted":true},"execution_count":4,"outputs":[{"execution_count":4,"output_type":"execute_result","data":{"text/plain":"number of bedrooms                       0\nnumber of bathrooms                      0\nliving area                              0\nlot area                                 0\nnumber of floors                         0\nwaterfront present                       0\nnumber of views                          0\ncondition of the house                   0\ngrade of the house                       0\nArea of the house(excluding basement)    0\nArea of the basement                     0\nBuilt Year                               0\nRenovation Year                          0\nPostal Code                              0\nLattitude                                0\nLongitude                                0\nliving_area_renov                        0\nlot_area_renov                           0\nNumber of schools nearby                 0\nDistance from the airport                0\nPrice                                    0\ndtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"X = df.drop('Price', axis=1)\ny = df['Price']","metadata":{"execution":{"iopub.status.busy":"2023-05-11T08:23:26.569671Z","iopub.execute_input":"2023-05-11T08:23:26.570629Z","iopub.status.idle":"2023-05-11T08:23:26.579194Z","shell.execute_reply.started":"2023-05-11T08:23:26.570579Z","shell.execute_reply":"2023-05-11T08:23:26.578145Z"},"trusted":true},"execution_count":6,"outputs":[]},{"cell_type":"code","source":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=12)","metadata":{"execution":{"iopub.status.busy":"2023-05-11T08:24:04.776595Z","iopub.execute_input":"2023-05-11T08:24:04.778433Z","iopub.status.idle":"2023-05-11T08:24:04.787754Z","shell.execute_reply.started":"2023-05-11T08:24:04.778390Z","shell.execute_reply":"2023-05-11T08:24:04.786928Z"},"trusted":true},"execution_count":7,"outputs":[]},{"cell_type":"code","source":"print(f'\\n shape of X_train - {X_train.shape}\\n')\nprint(f' shape of X_test - {X_test.shape}\\n')\nprint(f' shape of y_train - {y_train.shape}\\n')\nprint(f' shape of y_test - {y_test.shape}\\n')","metadata":{"execution":{"iopub.status.busy":"2023-05-11T08:24:45.922602Z","iopub.execute_input":"2023-05-11T08:24:45.922996Z","iopub.status.idle":"2023-05-11T08:24:45.930048Z","shell.execute_reply.started":"2023-05-11T08:24:45.922963Z","shell.execute_reply":"2023-05-11T08:24:45.928934Z"},"trusted":true},"execution_count":8,"outputs":[{"name":"stdout","text":"\n shape of X_train - (11696, 20)\n\n shape of X_test - (2924, 20)\n\n shape of y_train - (11696,)\n\n shape of y_test - (2924,)\n\n","output_type":"stream"}]},{"cell_type":"code","source":"number_of_features = len(X.columns)\n\nmodel = Sequential()\n\nmodel.add(layer=Input(shape=number_of_features))\n\nmodel.add(layer=Dense(units=32, activation='relu'))\n\nmodel.add(layer=Dense(units=64, activation='relu'))\n\nmodel.add(layer=Dense(units=128, activation='relu'))\n\nmodel.add(layer=Dense(units=256, activation='relu'))\n\nmodel.add(layer=Dense(units=512, activation='relu'))\n\nmodel.add(layer=Dense(units=1024, activation='relu'))\n\nmodel.add(layer=Dense(units=2048, activation='relu'))\n\nmodel.add(layer=Dense(units=256, activation='relu'))\n\nmodel.add(layer=Dense(units=128, activation='relu'))\n\nmodel.add(layer=Dense(units=64, activation='relu'))\n\nmodel.add(layer=Dense(units=32, activation='relu'))\n\nmodel.add(layer=Dense(units=16, activation='relu'))\n\nmodel.add(layer=Dense(units=1, activation='linear'))\n\nmodel.summary()","metadata":{"execution":{"iopub.status.busy":"2023-05-11T08:25:51.442048Z","iopub.execute_input":"2023-05-11T08:25:51.442517Z","iopub.status.idle":"2023-05-11T08:25:51.870368Z","shell.execute_reply.started":"2023-05-11T08:25:51.442482Z","shell.execute_reply":"2023-05-11T08:25:51.868618Z"},"trusted":true},"execution_count":9,"outputs":[{"name":"stdout","text":"Model: \"sequential\"\n_________________________________________________________________\n Layer (type)                Output Shape              Param #   \n=================================================================\n dense (Dense)               (None, 32)                672       \n                                                                 \n dense_1 (Dense)             (None, 64)                2112      \n                                                                 \n dense_2 (Dense)             (None, 128)               8320      \n                                                                 \n dense_3 (Dense)             (None, 256)               33024     \n                                                                 \n dense_4 (Dense)             (None, 512)               131584    \n                                                                 \n dense_5 (Dense)             (None, 1024)              525312    \n                                                                 \n dense_6 (Dense)             (None, 2048)              2099200   \n                                                                 \n dense_7 (Dense)             (None, 256)               524544    \n                                                                 \n dense_8 (Dense)             (None, 128)               32896     \n                                                                 \n dense_9 (Dense)             (None, 64)                8256      \n                                                                 \n dense_10 (Dense)            (None, 32)                2080      \n                                                                 \n dense_11 (Dense)            (None, 16)                528       \n                                                                 \n dense_12 (Dense)            (None, 1)                 17        \n                                                                 \n=================================================================\nTotal params: 3,368,545\nTrainable params: 3,368,545\nNon-trainable params: 0\n_________________________________________________________________\n","output_type":"stream"}]},{"cell_type":"code","source":"model.compile(optimizer='adam', loss='mse', metrics=['mae', 'mape'])","metadata":{"execution":{"iopub.status.busy":"2023-05-11T08:29:43.622699Z","iopub.execute_input":"2023-05-11T08:29:43.623079Z","iopub.status.idle":"2023-05-11T08:29:43.635726Z","shell.execute_reply.started":"2023-05-11T08:29:43.623047Z","shell.execute_reply":"2023-05-11T08:29:43.634689Z"},"trusted":true},"execution_count":11,"outputs":[]},{"cell_type":"code","source":"history = model.fit(X_train, y_train, epochs=100)","metadata":{"execution":{"iopub.status.busy":"2023-05-11T08:29:58.138842Z","iopub.execute_input":"2023-05-11T08:29:58.139241Z","iopub.status.idle":"2023-05-11T08:49:59.594992Z","shell.execute_reply.started":"2023-05-11T08:29:58.139208Z","shell.execute_reply":"2023-05-11T08:49:59.593843Z"},"trusted":true},"execution_count":12,"outputs":[{"name":"stdout","text":"Epoch 1/100\n366/366 [==============================] - 15s 35ms/step - loss: 109447774208.0000 - mae: 215079.1406 - mape: 46.5741\nEpoch 2/100\n366/366 [==============================] - 14s 37ms/step - loss: 69692235776.0000 - mae: 176348.5312 - mape: 36.8321\nEpoch 3/100\n366/366 [==============================] - 12s 34ms/step - loss: 63404273664.0000 - mae: 169308.2188 - mape: 35.2085\nEpoch 4/100\n366/366 [==============================] - 12s 33ms/step - loss: 59070185472.0000 - mae: 164970.6562 - mape: 34.4613\nEpoch 5/100\n366/366 [==============================] - 12s 32ms/step - loss: 60336078848.0000 - mae: 164828.3750 - mape: 34.4441\nEpoch 6/100\n366/366 [==============================] - 13s 35ms/step - loss: 60762050560.0000 - mae: 165201.5156 - mape: 34.6224\nEpoch 7/100\n366/366 [==============================] - 13s 36ms/step - loss: 60940779520.0000 - mae: 166507.4062 - mape: 34.5210\nEpoch 8/100\n366/366 [==============================] - 12s 32ms/step - loss: 59136782336.0000 - mae: 163303.8281 - mape: 34.1191\nEpoch 9/100\n366/366 [==============================] - 12s 33ms/step - loss: 54916722688.0000 - mae: 158587.4531 - mape: 33.1738\nEpoch 10/100\n366/366 [==============================] - 12s 33ms/step - loss: 57968062464.0000 - mae: 160375.6562 - mape: 33.4238\nEpoch 11/100\n366/366 [==============================] - 13s 35ms/step - loss: 59157639168.0000 - mae: 162772.3281 - mape: 33.8218\nEpoch 12/100\n366/366 [==============================] - 13s 34ms/step - loss: 58208182272.0000 - mae: 162181.7500 - mape: 33.5388\nEpoch 13/100\n366/366 [==============================] - 12s 32ms/step - loss: 55678398464.0000 - mae: 159521.7188 - mape: 33.0890\nEpoch 14/100\n366/366 [==============================] - 12s 34ms/step - loss: 60141125632.0000 - mae: 166614.9688 - mape: 34.5222\nEpoch 15/100\n366/366 [==============================] - 13s 36ms/step - loss: 54756265984.0000 - mae: 156776.6250 - mape: 32.7045\nEpoch 16/100\n366/366 [==============================] - 13s 34ms/step - loss: 54469607424.0000 - mae: 156107.0781 - mape: 32.3944\nEpoch 17/100\n366/366 [==============================] - 12s 32ms/step - loss: 52824842240.0000 - mae: 154164.1875 - mape: 32.2879\nEpoch 18/100\n366/366 [==============================] - 12s 32ms/step - loss: 55494275072.0000 - mae: 156166.6719 - mape: 32.3840\nEpoch 19/100\n366/366 [==============================] - 13s 36ms/step - loss: 54218985472.0000 - mae: 157170.4688 - mape: 32.6565\nEpoch 20/100\n366/366 [==============================] - 13s 36ms/step - loss: 54982725632.0000 - mae: 157420.2500 - mape: 32.8327\nEpoch 21/100\n366/366 [==============================] - 12s 32ms/step - loss: 54248001536.0000 - mae: 155923.5312 - mape: 32.3208\nEpoch 22/100\n366/366 [==============================] - 12s 33ms/step - loss: 51977113600.0000 - mae: 153983.0000 - mape: 32.1902\nEpoch 23/100\n366/366 [==============================] - 12s 33ms/step - loss: 52636864512.0000 - mae: 153746.4375 - mape: 32.0496\nEpoch 24/100\n366/366 [==============================] - 13s 36ms/step - loss: 54355083264.0000 - mae: 156446.5938 - mape: 32.6655\nEpoch 25/100\n366/366 [==============================] - 12s 34ms/step - loss: 54357204992.0000 - mae: 155656.5625 - mape: 32.4540\nEpoch 26/100\n366/366 [==============================] - 12s 32ms/step - loss: 58171514880.0000 - mae: 161440.1250 - mape: 33.6609\nEpoch 27/100\n366/366 [==============================] - 12s 33ms/step - loss: 51885826048.0000 - mae: 152142.2188 - mape: 31.6681\nEpoch 28/100\n366/366 [==============================] - 13s 34ms/step - loss: 53561028608.0000 - mae: 155727.1406 - mape: 32.2457\nEpoch 29/100\n366/366 [==============================] - 13s 35ms/step - loss: 53633056768.0000 - mae: 156132.6250 - mape: 32.4259\nEpoch 30/100\n366/366 [==============================] - 12s 33ms/step - loss: 51696984064.0000 - mae: 152381.7656 - mape: 31.6796\nEpoch 31/100\n366/366 [==============================] - 12s 32ms/step - loss: 53609578496.0000 - mae: 153075.3438 - mape: 31.8368\nEpoch 32/100\n366/366 [==============================] - 12s 33ms/step - loss: 53934321664.0000 - mae: 155893.2656 - mape: 32.4280\nEpoch 33/100\n366/366 [==============================] - 13s 36ms/step - loss: 50809466880.0000 - mae: 150836.2969 - mape: 31.4253\nEpoch 34/100\n366/366 [==============================] - 12s 34ms/step - loss: 52204400640.0000 - mae: 153543.3750 - mape: 31.9227\nEpoch 35/100\n366/366 [==============================] - 12s 33ms/step - loss: 52684161024.0000 - mae: 153452.6562 - mape: 31.9210\nEpoch 36/100\n366/366 [==============================] - 12s 32ms/step - loss: 52765786112.0000 - mae: 153496.9219 - mape: 31.8066\nEpoch 37/100\n366/366 [==============================] - 12s 34ms/step - loss: 50562940928.0000 - mae: 151485.9531 - mape: 31.4553\nEpoch 38/100\n366/366 [==============================] - 13s 35ms/step - loss: 50859905024.0000 - mae: 151102.2656 - mape: 31.6474\nEpoch 39/100\n366/366 [==============================] - 13s 34ms/step - loss: 51757178880.0000 - mae: 152833.7031 - mape: 31.8850\nEpoch 40/100\n366/366 [==============================] - 12s 33ms/step - loss: 51683401728.0000 - mae: 151908.0469 - mape: 31.6938\nEpoch 41/100\n366/366 [==============================] - 12s 32ms/step - loss: 52724862976.0000 - mae: 154104.8125 - mape: 32.0150\nEpoch 42/100\n366/366 [==============================] - 12s 32ms/step - loss: 51648589824.0000 - mae: 150918.8594 - mape: 31.5080\nEpoch 43/100\n366/366 [==============================] - 12s 32ms/step - loss: 51167621120.0000 - mae: 151935.2031 - mape: 31.6186\nEpoch 44/100\n366/366 [==============================] - 12s 32ms/step - loss: 50952880128.0000 - mae: 151091.8594 - mape: 31.4990\nEpoch 45/100\n366/366 [==============================] - 12s 33ms/step - loss: 50429874176.0000 - mae: 150619.7500 - mape: 31.4011\nEpoch 46/100\n366/366 [==============================] - 12s 32ms/step - loss: 52616884224.0000 - mae: 154244.1094 - mape: 31.9436\nEpoch 47/100\n366/366 [==============================] - 11s 31ms/step - loss: 49727008768.0000 - mae: 150735.9219 - mape: 31.2740\nEpoch 48/100\n366/366 [==============================] - 12s 32ms/step - loss: 49059569664.0000 - mae: 149439.2188 - mape: 31.3173\nEpoch 49/100\n366/366 [==============================] - 11s 30ms/step - loss: 51091693568.0000 - mae: 151458.9375 - mape: 31.5697\nEpoch 50/100\n366/366 [==============================] - 12s 32ms/step - loss: 51670458368.0000 - mae: 151277.7188 - mape: 31.3687\nEpoch 51/100\n366/366 [==============================] - 12s 33ms/step - loss: 50885656576.0000 - mae: 150741.8281 - mape: 31.3712\nEpoch 52/100\n366/366 [==============================] - 12s 32ms/step - loss: 52559597568.0000 - mae: 153331.6406 - mape: 31.9651\nEpoch 53/100\n366/366 [==============================] - 12s 32ms/step - loss: 50175832064.0000 - mae: 149957.4062 - mape: 31.1467\nEpoch 54/100\n366/366 [==============================] - 11s 31ms/step - loss: 52938498048.0000 - mae: 152948.9219 - mape: 31.7781\nEpoch 55/100\n366/366 [==============================] - 12s 32ms/step - loss: 50749177856.0000 - mae: 151613.3594 - mape: 31.7454\nEpoch 56/100\n366/366 [==============================] - 12s 33ms/step - loss: 49212473344.0000 - mae: 149098.5000 - mape: 31.0257\nEpoch 57/100\n366/366 [==============================] - 12s 32ms/step - loss: 48073482240.0000 - mae: 147495.3125 - mape: 30.8118\nEpoch 58/100\n366/366 [==============================] - 12s 32ms/step - loss: 55562416128.0000 - mae: 156292.0625 - mape: 32.4422\nEpoch 59/100\n366/366 [==============================] - 12s 32ms/step - loss: 49337024512.0000 - mae: 148493.7500 - mape: 30.8517\nEpoch 60/100\n366/366 [==============================] - 12s 31ms/step - loss: 49382432768.0000 - mae: 149387.5625 - mape: 31.1319\nEpoch 61/100\n366/366 [==============================] - 12s 32ms/step - loss: 48687521792.0000 - mae: 147896.2344 - mape: 30.8784\nEpoch 62/100\n366/366 [==============================] - 12s 32ms/step - loss: 50052771840.0000 - mae: 149244.2656 - mape: 31.1206\nEpoch 63/100\n366/366 [==============================] - 11s 31ms/step - loss: 48468078592.0000 - mae: 147649.9844 - mape: 30.7355\nEpoch 64/100\n366/366 [==============================] - 12s 32ms/step - loss: 50392883200.0000 - mae: 150681.3125 - mape: 31.3334\nEpoch 65/100\n366/366 [==============================] - 12s 32ms/step - loss: 47697326080.0000 - mae: 146442.0312 - mape: 30.5119\nEpoch 66/100\n366/366 [==============================] - 12s 32ms/step - loss: 50538127360.0000 - mae: 149894.0781 - mape: 31.1407\nEpoch 67/100\n366/366 [==============================] - 12s 32ms/step - loss: 48884445184.0000 - mae: 147997.0156 - mape: 30.9110\nEpoch 68/100\n366/366 [==============================] - 12s 31ms/step - loss: 48030707712.0000 - mae: 147148.0781 - mape: 30.7882\nEpoch 69/100\n366/366 [==============================] - 12s 32ms/step - loss: 48285474816.0000 - mae: 146657.6875 - mape: 30.5937\nEpoch 70/100\n366/366 [==============================] - 12s 32ms/step - loss: 49042997248.0000 - mae: 148339.6562 - mape: 31.0230\nEpoch 71/100\n366/366 [==============================] - 12s 32ms/step - loss: 47215173632.0000 - mae: 146398.5312 - mape: 30.6137\nEpoch 72/100\n366/366 [==============================] - 12s 33ms/step - loss: 46886105088.0000 - mae: 145394.7031 - mape: 30.4421\nEpoch 73/100\n366/366 [==============================] - 12s 32ms/step - loss: 47995908096.0000 - mae: 147003.5312 - mape: 30.6008\nEpoch 74/100\n366/366 [==============================] - 12s 32ms/step - loss: 46974246912.0000 - mae: 145287.7188 - mape: 30.4677\nEpoch 75/100\n366/366 [==============================] - 12s 33ms/step - loss: 49026129920.0000 - mae: 147736.1094 - mape: 30.8627\nEpoch 76/100\n366/366 [==============================] - 12s 32ms/step - loss: 47453560832.0000 - mae: 145824.3750 - mape: 30.5034\nEpoch 77/100\n366/366 [==============================] - 12s 33ms/step - loss: 46830551040.0000 - mae: 145390.7500 - mape: 30.4223\nEpoch 78/100\n366/366 [==============================] - 12s 32ms/step - loss: 47663366144.0000 - mae: 146774.6719 - mape: 30.5780\nEpoch 79/100\n366/366 [==============================] - 12s 33ms/step - loss: 47495491584.0000 - mae: 146075.7500 - mape: 30.5415\nEpoch 80/100\n366/366 [==============================] - 12s 33ms/step - loss: 47524016128.0000 - mae: 146083.1562 - mape: 30.5819\nEpoch 81/100\n366/366 [==============================] - 12s 32ms/step - loss: 46954786816.0000 - mae: 145155.3594 - mape: 30.4442\nEpoch 82/100\n366/366 [==============================] - 12s 33ms/step - loss: 46318325760.0000 - mae: 144742.2500 - mape: 30.2816\nEpoch 83/100\n366/366 [==============================] - 12s 33ms/step - loss: 46116982784.0000 - mae: 144476.2188 - mape: 30.3318\nEpoch 84/100\n366/366 [==============================] - 12s 33ms/step - loss: 45931446272.0000 - mae: 145875.0000 - mape: 30.5707\nEpoch 85/100\n366/366 [==============================] - 12s 33ms/step - loss: 46642069504.0000 - mae: 144522.3906 - mape: 30.3106\nEpoch 86/100\n366/366 [==============================] - 12s 32ms/step - loss: 46437175296.0000 - mae: 145334.6250 - mape: 30.4670\nEpoch 87/100\n366/366 [==============================] - 12s 32ms/step - loss: 45914816512.0000 - mae: 143916.2188 - mape: 30.0410\nEpoch 88/100\n366/366 [==============================] - 12s 33ms/step - loss: 45261467648.0000 - mae: 142993.0625 - mape: 30.0650\nEpoch 89/100\n366/366 [==============================] - 12s 32ms/step - loss: 46109069312.0000 - mae: 145244.5625 - mape: 30.4946\nEpoch 90/100\n366/366 [==============================] - 12s 32ms/step - loss: 46418276352.0000 - mae: 145155.9375 - mape: 30.3451\nEpoch 91/100\n366/366 [==============================] - 12s 32ms/step - loss: 46220292096.0000 - mae: 145362.7344 - mape: 30.5959\nEpoch 92/100\n366/366 [==============================] - 12s 32ms/step - loss: 45246578688.0000 - mae: 143667.0312 - mape: 30.1068\nEpoch 93/100\n366/366 [==============================] - 12s 32ms/step - loss: 45070348288.0000 - mae: 143416.7500 - mape: 30.0792\nEpoch 94/100\n366/366 [==============================] - 12s 31ms/step - loss: 45907832832.0000 - mae: 143828.9219 - mape: 30.2566\nEpoch 95/100\n366/366 [==============================] - 11s 31ms/step - loss: 45459357696.0000 - mae: 143426.9375 - mape: 30.0694\nEpoch 96/100\n366/366 [==============================] - 12s 32ms/step - loss: 45658738688.0000 - mae: 144166.5938 - mape: 30.2713\nEpoch 97/100\n366/366 [==============================] - 12s 31ms/step - loss: 44921544704.0000 - mae: 143102.2031 - mape: 30.0450\nEpoch 98/100\n366/366 [==============================] - 12s 32ms/step - loss: 48426164224.0000 - mae: 146921.7344 - mape: 30.7456\nEpoch 99/100\n366/366 [==============================] - 12s 32ms/step - loss: 44711575552.0000 - mae: 142273.1250 - mape: 29.8303\nEpoch 100/100\n366/366 [==============================] - 12s 32ms/step - loss: 44971749376.0000 - mae: 142964.5312 - mape: 30.0934\n","output_type":"stream"}]},{"cell_type":"code","source":"y_pred = model.predict(X_test)","metadata":{"execution":{"iopub.status.busy":"2023-05-11T08:58:46.899117Z","iopub.execute_input":"2023-05-11T08:58:46.899595Z","iopub.status.idle":"2023-05-11T08:58:47.774850Z","shell.execute_reply.started":"2023-05-11T08:58:46.899550Z","shell.execute_reply":"2023-05-11T08:58:47.773760Z"},"trusted":true},"execution_count":13,"outputs":[{"name":"stdout","text":"92/92 [==============================] - 1s 6ms/step\n","output_type":"stream"}]},{"cell_type":"code","source":"y_pred","metadata":{"execution":{"iopub.status.busy":"2023-05-11T08:59:02.765524Z","iopub.execute_input":"2023-05-11T08:59:02.765919Z","iopub.status.idle":"2023-05-11T08:59:02.773228Z","shell.execute_reply.started":"2023-05-11T08:59:02.765887Z","shell.execute_reply":"2023-05-11T08:59:02.772230Z"},"trusted":true},"execution_count":14,"outputs":[{"execution_count":14,"output_type":"execute_result","data":{"text/plain":"array([[382153.16],\n       [423553.1 ],\n       [331951.1 ],\n       ...,\n       [408765.22],\n       [343420.6 ],\n       [614666.4 ]], dtype=float32)"},"metadata":{}}]},{"cell_type":"code","source":"y_test","metadata":{"execution":{"iopub.status.busy":"2023-05-11T08:59:30.917542Z","iopub.execute_input":"2023-05-11T08:59:30.917946Z","iopub.status.idle":"2023-05-11T08:59:30.926218Z","shell.execute_reply.started":"2023-05-11T08:59:30.917905Z","shell.execute_reply":"2023-05-11T08:59:30.925151Z"},"trusted":true},"execution_count":15,"outputs":[{"execution_count":15,"output_type":"execute_result","data":{"text/plain":"12149    640000\n13581    650000\n11595    325000\n2769     373000\n7393     355000\n          ...  \n7362     497000\n11132    400000\n142      366750\n1405     276000\n6184     569000\nName: Price, Length: 2924, dtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"plt.scatter(y_test, y_pred, c=y_pred)\nplt.show()\n","metadata":{"execution":{"iopub.status.busy":"2023-05-11T09:00:09.002788Z","iopub.execute_input":"2023-05-11T09:00:09.003617Z","iopub.status.idle":"2023-05-11T09:00:09.290330Z","shell.execute_reply.started":"2023-05-11T09:00:09.003561Z","shell.execute_reply":"2023-05-11T09:00:09.288903Z"},"trusted":true},"execution_count":16,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"code","source":"pd.DataFrame({'Actual Value':y_test.values.flatten(), 'Predicted Value':y_pred.flatten()})","metadata":{"execution":{"iopub.status.busy":"2023-05-11T09:00:28.294286Z","iopub.execute_input":"2023-05-11T09:00:28.295327Z","iopub.status.idle":"2023-05-11T09:00:28.311144Z","shell.execute_reply.started":"2023-05-11T09:00:28.295281Z","shell.execute_reply":"2023-05-11T09:00:28.309834Z"},"trusted":true},"execution_count":17,"outputs":[{"execution_count":17,"output_type":"execute_result","data":{"text/plain":"      Actual Value  Predicted Value\n0           640000     382153.15625\n1           650000     423553.09375\n2           325000     331951.09375\n3           373000     482645.62500\n4           355000     554353.00000\n...            ...              ...\n2919        497000     552924.75000\n2920        400000     380351.65625\n2921        366750     408765.21875\n2922        276000     343420.59375\n2923        569000     614666.37500\n\n[2924 rows x 2 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Actual Value</th>\n      <th>Predicted Value</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>640000</td>\n      <td>382153.15625</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>650000</td>\n      <td>423553.09375</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>325000</td>\n      <td>331951.09375</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>373000</td>\n      <td>482645.62500</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>355000</td>\n      <td>554353.00000</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>2919</th>\n      <td>497000</td>\n      <td>552924.75000</td>\n    </tr>\n    <tr>\n      <th>2920</th>\n      <td>400000</td>\n      <td>380351.65625</td>\n    </tr>\n    <tr>\n      <th>2921</th>\n      <td>366750</td>\n      <td>408765.21875</td>\n    </tr>\n    <tr>\n      <th>2922</th>\n      <td>276000</td>\n      <td>343420.59375</td>\n    </tr>\n    <tr>\n      <th>2923</th>\n      <td>569000</td>\n      <td>614666.37500</td>\n    </tr>\n  </tbody>\n</table>\n<p>2924 rows Ã— 2 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"r2_score(y_pred=y_pred, y_true=y_test) * 100","metadata":{"execution":{"iopub.status.busy":"2023-05-11T09:00:44.434709Z","iopub.execute_input":"2023-05-11T09:00:44.435185Z","iopub.status.idle":"2023-05-11T09:00:44.442962Z","shell.execute_reply.started":"2023-05-11T09:00:44.435146Z","shell.execute_reply":"2023-05-11T09:00:44.441641Z"},"trusted":true},"execution_count":18,"outputs":[{"execution_count":18,"output_type":"execute_result","data":{"text/plain":"67.20374618307171"},"metadata":{}}]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}