{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.10","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"from sklearn.model_selection import train_test_split\nfrom tensorflow.keras.layers import Input, Dense\nfrom tensorflow.keras.optimizers import Adam\nfrom tensorflow.keras import Sequential\nfrom sklearn.metrics import r2_score\nfrom matplotlib import pyplot as plt\nimport pandas as pd\nimport numpy as np","metadata":{"execution":{"iopub.status.busy":"2023-05-10T04:28:47.660918Z","iopub.execute_input":"2023-05-10T04:28:47.661915Z","iopub.status.idle":"2023-05-10T04:28:57.439533Z","shell.execute_reply.started":"2023-05-10T04:28:47.661868Z","shell.execute_reply":"2023-05-10T04:28:57.438573Z"},"trusted":true},"execution_count":1,"outputs":[{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/scipy/__init__.py:146: UserWarning: A NumPy version >=1.16.5 and <1.23.0 is required for this version of SciPy (detected version 1.23.5\n  warnings.warn(f\"A NumPy version >={np_minversion} and <{np_maxversion}\"\n","output_type":"stream"}]},{"cell_type":"code","source":"df = pd.read_csv('/kaggle/input/house-price-dataset-of-india/House Price India.csv')\ndf.drop(['id','Date'], axis=1, inplace=True)\ndf.head()","metadata":{"execution":{"iopub.status.busy":"2023-05-10T04:29:14.786974Z","iopub.execute_input":"2023-05-10T04:29:14.787481Z","iopub.status.idle":"2023-05-10T04:29:14.920395Z","shell.execute_reply.started":"2023-05-10T04:29:14.787441Z","shell.execute_reply":"2023-05-10T04:29:14.919549Z"},"trusted":true},"execution_count":2,"outputs":[{"execution_count":2,"output_type":"execute_result","data":{"text/plain":"   number of bedrooms  number of bathrooms  living area  lot area  \\\n0                   5                 2.50         3650      9050   \n1                   4                 2.50         2920      4000   \n2                   5                 2.75         2910      9480   \n3                   4                 2.50         3310     42998   \n4                   3                 2.00         2710      4500   \n\n   number of floors  waterfront present  number of views  \\\n0               2.0                   0                4   \n1               1.5                   0                0   \n2               1.5                   0                0   \n3               2.0                   0                0   \n4               1.5                   0                0   \n\n   condition of the house  grade of the house  \\\n0                       5                  10   \n1                       5                   8   \n2                       3                   8   \n3                       3                   9   \n4                       4                   8   \n\n   Area of the house(excluding basement)  ...  Built Year  Renovation Year  \\\n0                                   3370  ...        1921                0   \n1                                   1910  ...        1909                0   \n2                                   2910  ...        1939                0   \n3                                   3310  ...        2001                0   \n4                                   1880  ...        1929                0   \n\n   Postal Code  Lattitude  Longitude  living_area_renov  lot_area_renov  \\\n0       122003    52.8645   -114.557               2880            5400   \n1       122004    52.8878   -114.470               2470            4000   \n2       122004    52.8852   -114.468               2940            6600   \n3       122005    52.9532   -114.321               3350           42847   \n4       122006    52.9047   -114.485               2060            4500   \n\n   Number of schools nearby  Distance from the airport    Price  \n0                         2                         58  2380000  \n1                         2                         51  1400000  \n2                         1                         53  1200000  \n3                         3                         76   838000  \n4                         1                         51   805000  \n\n[5 rows x 21 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>number of bedrooms</th>\n      <th>number of bathrooms</th>\n      <th>living area</th>\n      <th>lot area</th>\n      <th>number of floors</th>\n      <th>waterfront present</th>\n      <th>number of views</th>\n      <th>condition of the house</th>\n      <th>grade of the house</th>\n      <th>Area of the house(excluding basement)</th>\n      <th>...</th>\n      <th>Built Year</th>\n      <th>Renovation Year</th>\n      <th>Postal Code</th>\n      <th>Lattitude</th>\n      <th>Longitude</th>\n      <th>living_area_renov</th>\n      <th>lot_area_renov</th>\n      <th>Number of schools nearby</th>\n      <th>Distance from the airport</th>\n      <th>Price</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>5</td>\n      <td>2.50</td>\n      <td>3650</td>\n      <td>9050</td>\n      <td>2.0</td>\n      <td>0</td>\n      <td>4</td>\n      <td>5</td>\n      <td>10</td>\n      <td>3370</td>\n      <td>...</td>\n      <td>1921</td>\n      <td>0</td>\n      <td>122003</td>\n      <td>52.8645</td>\n      <td>-114.557</td>\n      <td>2880</td>\n      <td>5400</td>\n      <td>2</td>\n      <td>58</td>\n      <td>2380000</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>4</td>\n      <td>2.50</td>\n      <td>2920</td>\n      <td>4000</td>\n      <td>1.5</td>\n      <td>0</td>\n      <td>0</td>\n      <td>5</td>\n      <td>8</td>\n      <td>1910</td>\n      <td>...</td>\n      <td>1909</td>\n      <td>0</td>\n      <td>122004</td>\n      <td>52.8878</td>\n      <td>-114.470</td>\n      <td>2470</td>\n      <td>4000</td>\n      <td>2</td>\n      <td>51</td>\n      <td>1400000</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>5</td>\n      <td>2.75</td>\n      <td>2910</td>\n      <td>9480</td>\n      <td>1.5</td>\n      <td>0</td>\n      <td>0</td>\n      <td>3</td>\n      <td>8</td>\n      <td>2910</td>\n      <td>...</td>\n      <td>1939</td>\n      <td>0</td>\n      <td>122004</td>\n      <td>52.8852</td>\n      <td>-114.468</td>\n      <td>2940</td>\n      <td>6600</td>\n      <td>1</td>\n      <td>53</td>\n      <td>1200000</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>2.50</td>\n      <td>3310</td>\n      <td>42998</td>\n      <td>2.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>3</td>\n      <td>9</td>\n      <td>3310</td>\n      <td>...</td>\n      <td>2001</td>\n      <td>0</td>\n      <td>122005</td>\n      <td>52.9532</td>\n      <td>-114.321</td>\n      <td>3350</td>\n      <td>42847</td>\n      <td>3</td>\n      <td>76</td>\n      <td>838000</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>3</td>\n      <td>2.00</td>\n      <td>2710</td>\n      <td>4500</td>\n      <td>1.5</td>\n      <td>0</td>\n      <td>0</td>\n      <td>4</td>\n      <td>8</td>\n      <td>1880</td>\n      <td>...</td>\n      <td>1929</td>\n      <td>0</td>\n      <td>122006</td>\n      <td>52.9047</td>\n      <td>-114.485</td>\n      <td>2060</td>\n      <td>4500</td>\n      <td>1</td>\n      <td>51</td>\n      <td>805000</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows Ã— 21 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"df.info()","metadata":{"execution":{"iopub.status.busy":"2023-05-10T04:29:45.268788Z","iopub.execute_input":"2023-05-10T04:29:45.270156Z","iopub.status.idle":"2023-05-10T04:29:45.301562Z","shell.execute_reply.started":"2023-05-10T04:29:45.270041Z","shell.execute_reply":"2023-05-10T04:29:45.300636Z"},"trusted":true},"execution_count":3,"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 14620 entries, 0 to 14619\nData columns (total 21 columns):\n #   Column                                 Non-Null Count  Dtype  \n---  ------                                 --------------  -----  \n 0   number of bedrooms                     14620 non-null  int64  \n 1   number of bathrooms                    14620 non-null  float64\n 2   living area                            14620 non-null  int64  \n 3   lot area                               14620 non-null  int64  \n 4   number of floors                       14620 non-null  float64\n 5   waterfront present                     14620 non-null  int64  \n 6   number of views                        14620 non-null  int64  \n 7   condition of the house                 14620 non-null  int64  \n 8   grade of the house                     14620 non-null  int64  \n 9   Area of the house(excluding basement)  14620 non-null  int64  \n 10  Area of the basement                   14620 non-null  int64  \n 11  Built Year                             14620 non-null  int64  \n 12  Renovation Year                        14620 non-null  int64  \n 13  Postal Code                            14620 non-null  int64  \n 14  Lattitude                              14620 non-null  float64\n 15  Longitude                              14620 non-null  float64\n 16  living_area_renov                      14620 non-null  int64  \n 17  lot_area_renov                         14620 non-null  int64  \n 18  Number of schools nearby               14620 non-null  int64  \n 19  Distance from the airport              14620 non-null  int64  \n 20  Price                                  14620 non-null  int64  \ndtypes: float64(4), int64(17)\nmemory usage: 2.3 MB\n","output_type":"stream"}]},{"cell_type":"code","source":"df.isna().sum()","metadata":{"execution":{"iopub.status.busy":"2023-05-10T04:30:42.829111Z","iopub.execute_input":"2023-05-10T04:30:42.829969Z","iopub.status.idle":"2023-05-10T04:30:42.842479Z","shell.execute_reply.started":"2023-05-10T04:30:42.829907Z","shell.execute_reply":"2023-05-10T04:30:42.840794Z"},"trusted":true},"execution_count":4,"outputs":[{"execution_count":4,"output_type":"execute_result","data":{"text/plain":"number of bedrooms                       0\nnumber of bathrooms                      0\nliving area                              0\nlot area                                 0\nnumber of floors                         0\nwaterfront present                       0\nnumber of views                          0\ncondition of the house                   0\ngrade of the house                       0\nArea of the house(excluding basement)    0\nArea of the basement                     0\nBuilt Year                               0\nRenovation Year                          0\nPostal Code                              0\nLattitude                                0\nLongitude                                0\nliving_area_renov                        0\nlot_area_renov                           0\nNumber of schools nearby                 0\nDistance from the airport                0\nPrice                                    0\ndtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"X = df.drop('Price', axis=1)\ny = df['Price']","metadata":{"execution":{"iopub.status.busy":"2023-05-10T04:31:33.098956Z","iopub.execute_input":"2023-05-10T04:31:33.099406Z","iopub.status.idle":"2023-05-10T04:31:33.107548Z","shell.execute_reply.started":"2023-05-10T04:31:33.099373Z","shell.execute_reply":"2023-05-10T04:31:33.105959Z"},"trusted":true},"execution_count":8,"outputs":[]},{"cell_type":"code","source":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=12)\n","metadata":{"execution":{"iopub.status.busy":"2023-05-10T04:32:11.845750Z","iopub.execute_input":"2023-05-10T04:32:11.846172Z","iopub.status.idle":"2023-05-10T04:32:11.858706Z","shell.execute_reply.started":"2023-05-10T04:32:11.846141Z","shell.execute_reply":"2023-05-10T04:32:11.857324Z"},"trusted":true},"execution_count":9,"outputs":[]},{"cell_type":"code","source":"print(f'\\n shape of X_train - {X_train.shape}\\n')\nprint(f' shape of X_test - {X_test.shape}\\n')\nprint(f' shape of y_train - {y_train.shape}\\n')\nprint(f' shape of y_test - {y_test.shape}\\n')","metadata":{"execution":{"iopub.status.busy":"2023-05-10T04:32:37.370472Z","iopub.execute_input":"2023-05-10T04:32:37.370927Z","iopub.status.idle":"2023-05-10T04:32:37.376887Z","shell.execute_reply.started":"2023-05-10T04:32:37.370892Z","shell.execute_reply":"2023-05-10T04:32:37.375931Z"},"trusted":true},"execution_count":10,"outputs":[{"name":"stdout","text":"\n shape of X_train - (11696, 20)\n\n shape of X_test - (2924, 20)\n\n shape of y_train - (11696,)\n\n shape of y_test - (2924,)\n\n","output_type":"stream"}]},{"cell_type":"code","source":"number_of_features = len(X.columns)\n\nmodel = Sequential()\n\nmodel.add(layer=Input(shape=number_of_features))\n\nmodel.add(layer=Dense(units=32, activation='relu'))\n\nmodel.add(layer=Dense(units=64, activation='relu'))\n\nmodel.add(layer=Dense(units=128, activation='relu'))\n\nmodel.add(layer=Dense(units=256, activation='relu'))\n\nmodel.add(layer=Dense(units=512, activation='relu'))\n\nmodel.add(layer=Dense(units=1024, activation='relu'))\n\nmodel.add(layer=Dense(units=2048, activation='relu'))\n\nmodel.add(layer=Dense(units=256, activation='relu'))\n\nmodel.add(layer=Dense(units=128, activation='relu'))\n\nmodel.add(layer=Dense(units=64, activation='relu'))\n\nmodel.add(layer=Dense(units=32, activation='relu'))\n\nmodel.add(layer=Dense(units=16, activation='relu'))\n\nmodel.add(layer=Dense(units=1, activation='linear'))\n\nmodel.summary()","metadata":{"execution":{"iopub.status.busy":"2023-05-10T04:34:05.003889Z","iopub.execute_input":"2023-05-10T04:34:05.004905Z","iopub.status.idle":"2023-05-10T04:34:05.454342Z","shell.execute_reply.started":"2023-05-10T04:34:05.004859Z","shell.execute_reply":"2023-05-10T04:34:05.453141Z"},"trusted":true},"execution_count":11,"outputs":[{"name":"stdout","text":"Model: \"sequential\"\n_________________________________________________________________\n Layer (type)                Output Shape              Param #   \n=================================================================\n dense (Dense)               (None, 32)                672       \n                                                                 \n dense_1 (Dense)             (None, 64)                2112      \n                                                                 \n dense_2 (Dense)             (None, 128)               8320      \n                                                                 \n dense_3 (Dense)             (None, 256)               33024     \n                                                                 \n dense_4 (Dense)             (None, 512)               131584    \n                                                                 \n dense_5 (Dense)             (None, 1024)              525312    \n                                                                 \n dense_6 (Dense)             (None, 2048)              2099200   \n                                                                 \n dense_7 (Dense)             (None, 256)               524544    \n                                                                 \n dense_8 (Dense)             (None, 128)               32896     \n                                                                 \n dense_9 (Dense)             (None, 64)                8256      \n                                                                 \n dense_10 (Dense)            (None, 32)                2080      \n                                                                 \n dense_11 (Dense)            (None, 16)                528       \n                                                                 \n dense_12 (Dense)            (None, 1)                 17        \n                                                                 \n=================================================================\nTotal params: 3,368,545\nTrainable params: 3,368,545\nNon-trainable params: 0\n_________________________________________________________________\n","output_type":"stream"}]},{"cell_type":"code","source":"model.compile(optimizer='adam', loss='mse', metrics=['mae', 'mape'])","metadata":{"execution":{"iopub.status.busy":"2023-05-10T04:34:42.835328Z","iopub.execute_input":"2023-05-10T04:34:42.835814Z","iopub.status.idle":"2023-05-10T04:34:42.858989Z","shell.execute_reply.started":"2023-05-10T04:34:42.835779Z","shell.execute_reply":"2023-05-10T04:34:42.857530Z"},"trusted":true},"execution_count":12,"outputs":[]},{"cell_type":"code","source":"history = model.fit(X_train, y_train, epochs=100)","metadata":{"execution":{"iopub.status.busy":"2023-05-10T04:35:04.716817Z","iopub.execute_input":"2023-05-10T04:35:04.717326Z","iopub.status.idle":"2023-05-10T05:02:57.155211Z","shell.execute_reply.started":"2023-05-10T04:35:04.717290Z","shell.execute_reply":"2023-05-10T05:02:57.153942Z"},"trusted":true},"execution_count":13,"outputs":[{"name":"stdout","text":"Epoch 1/100\n366/366 [==============================] - 20s 47ms/step - loss: 135304527872.0000 - mae: 240073.2344 - mape: 53.5067\nEpoch 2/100\n366/366 [==============================] - 17s 46ms/step - loss: 77597376512.0000 - mae: 185041.7969 - mape: 39.4969\nEpoch 3/100\n366/366 [==============================] - 17s 47ms/step - loss: 65820041216.0000 - mae: 172573.1719 - mape: 35.8105\nEpoch 4/100\n366/366 [==============================] - 17s 45ms/step - loss: 67304878080.0000 - mae: 171898.2031 - mape: 36.3505\nEpoch 5/100\n366/366 [==============================] - 17s 46ms/step - loss: 60003840000.0000 - mae: 165364.2031 - mape: 34.7052\nEpoch 6/100\n366/366 [==============================] - 17s 46ms/step - loss: 62367686656.0000 - mae: 166983.2969 - mape: 34.9674\nEpoch 7/100\n366/366 [==============================] - 17s 47ms/step - loss: 59048460288.0000 - mae: 163598.3125 - mape: 34.3328\nEpoch 8/100\n366/366 [==============================] - 17s 47ms/step - loss: 56372219904.0000 - mae: 161392.2812 - mape: 33.8605\nEpoch 9/100\n366/366 [==============================] - 17s 47ms/step - loss: 56239280128.0000 - mae: 159098.3125 - mape: 33.4336\nEpoch 10/100\n366/366 [==============================] - 17s 46ms/step - loss: 62234271744.0000 - mae: 167654.1094 - mape: 35.0482\nEpoch 11/100\n366/366 [==============================] - 17s 47ms/step - loss: 57629233152.0000 - mae: 161283.5312 - mape: 33.4584\nEpoch 12/100\n366/366 [==============================] - 17s 47ms/step - loss: 58222555136.0000 - mae: 162096.7500 - mape: 33.9271\nEpoch 13/100\n366/366 [==============================] - 17s 46ms/step - loss: 57792602112.0000 - mae: 159786.7969 - mape: 33.2351\nEpoch 14/100\n366/366 [==============================] - 17s 46ms/step - loss: 60883746816.0000 - mae: 164802.1719 - mape: 34.3506\nEpoch 15/100\n366/366 [==============================] - 17s 46ms/step - loss: 55709143040.0000 - mae: 158477.8750 - mape: 33.1130\nEpoch 16/100\n366/366 [==============================] - 17s 47ms/step - loss: 56371642368.0000 - mae: 159787.4219 - mape: 33.3040\nEpoch 17/100\n366/366 [==============================] - 17s 46ms/step - loss: 54411599872.0000 - mae: 156779.2969 - mape: 32.8011\nEpoch 18/100\n366/366 [==============================] - 17s 47ms/step - loss: 54555680768.0000 - mae: 158294.8438 - mape: 32.9354\nEpoch 19/100\n366/366 [==============================] - 17s 45ms/step - loss: 55215235072.0000 - mae: 157049.7344 - mape: 32.7650\nEpoch 20/100\n366/366 [==============================] - 17s 46ms/step - loss: 53200011264.0000 - mae: 156683.5000 - mape: 32.7614\nEpoch 21/100\n366/366 [==============================] - 16s 45ms/step - loss: 55463985152.0000 - mae: 157898.8906 - mape: 32.9127\nEpoch 22/100\n366/366 [==============================] - 16s 45ms/step - loss: 57207439360.0000 - mae: 160498.0156 - mape: 33.5922\nEpoch 23/100\n366/366 [==============================] - 16s 44ms/step - loss: 56487571456.0000 - mae: 158042.4375 - mape: 32.8024\nEpoch 24/100\n366/366 [==============================] - 17s 45ms/step - loss: 53550571520.0000 - mae: 155614.8906 - mape: 32.5589\nEpoch 25/100\n366/366 [==============================] - 17s 45ms/step - loss: 54672076800.0000 - mae: 156638.1875 - mape: 32.6996\nEpoch 26/100\n366/366 [==============================] - 16s 44ms/step - loss: 54179782656.0000 - mae: 156081.5625 - mape: 32.4708\nEpoch 27/100\n366/366 [==============================] - 16s 45ms/step - loss: 54024900608.0000 - mae: 155492.0000 - mape: 32.4874\nEpoch 28/100\n366/366 [==============================] - 17s 46ms/step - loss: 54542196736.0000 - mae: 156350.7969 - mape: 32.6258\nEpoch 29/100\n366/366 [==============================] - 17s 45ms/step - loss: 52617187328.0000 - mae: 155476.5781 - mape: 32.3987\nEpoch 30/100\n366/366 [==============================] - 17s 46ms/step - loss: 53995409408.0000 - mae: 155567.9375 - mape: 32.4429\nEpoch 31/100\n366/366 [==============================] - 16s 45ms/step - loss: 53043785728.0000 - mae: 155264.6094 - mape: 32.2841\nEpoch 32/100\n366/366 [==============================] - 17s 45ms/step - loss: 52611788800.0000 - mae: 152982.8125 - mape: 31.9876\nEpoch 33/100\n366/366 [==============================] - 16s 45ms/step - loss: 52601114624.0000 - mae: 154060.3594 - mape: 31.9064\nEpoch 34/100\n366/366 [==============================] - 16s 44ms/step - loss: 53436190720.0000 - mae: 155371.8438 - mape: 32.5475\nEpoch 35/100\n366/366 [==============================] - 16s 44ms/step - loss: 52359503872.0000 - mae: 153177.2656 - mape: 31.7869\nEpoch 36/100\n366/366 [==============================] - 16s 44ms/step - loss: 51884412928.0000 - mae: 152922.4531 - mape: 31.8422\nEpoch 37/100\n366/366 [==============================] - 17s 45ms/step - loss: 52401246208.0000 - mae: 153942.8125 - mape: 32.1010\nEpoch 38/100\n366/366 [==============================] - 17s 45ms/step - loss: 53270327296.0000 - mae: 155212.0000 - mape: 32.3595\nEpoch 39/100\n366/366 [==============================] - 16s 44ms/step - loss: 51830636544.0000 - mae: 151537.4531 - mape: 31.5399\nEpoch 40/100\n366/366 [==============================] - 16s 44ms/step - loss: 51660058624.0000 - mae: 152242.2812 - mape: 31.6271\nEpoch 41/100\n366/366 [==============================] - 16s 45ms/step - loss: 51733872640.0000 - mae: 153102.7812 - mape: 31.7154\nEpoch 43/100\n366/366 [==============================] - 16s 44ms/step - loss: 49975349248.0000 - mae: 150054.7656 - mape: 31.3372\nEpoch 45/100\n366/366 [==============================] - 17s 45ms/step - loss: 50485960704.0000 - mae: 151302.3750 - mape: 31.4931\nEpoch 46/100\n366/366 [==============================] - 17s 46ms/step - loss: 52636737536.0000 - mae: 152704.4375 - mape: 31.7494\nEpoch 47/100\n366/366 [==============================] - 17s 46ms/step - loss: 50343096320.0000 - mae: 150967.0312 - mape: 31.5841\nEpoch 48/100\n366/366 [==============================] - 17s 45ms/step - loss: 50102812672.0000 - mae: 150175.1406 - mape: 31.1455\nEpoch 49/100\n366/366 [==============================] - 17s 46ms/step - loss: 50870018048.0000 - mae: 150468.7969 - mape: 31.4658\nEpoch 50/100\n366/366 [==============================] - 17s 45ms/step - loss: 50124378112.0000 - mae: 150194.0312 - mape: 31.3000\nEpoch 51/100\n366/366 [==============================] - 17s 46ms/step - loss: 48745680896.0000 - mae: 148115.3438 - mape: 30.8084\nEpoch 52/100\n366/366 [==============================] - 17s 46ms/step - loss: 50737438720.0000 - mae: 151251.3750 - mape: 31.6259\nEpoch 53/100\n366/366 [==============================] - 17s 47ms/step - loss: 50652958720.0000 - mae: 151542.5469 - mape: 31.5123\nEpoch 54/100\n366/366 [==============================] - 17s 45ms/step - loss: 51375366144.0000 - mae: 152882.9375 - mape: 31.7939\nEpoch 55/100\n366/366 [==============================] - 17s 46ms/step - loss: 51210866688.0000 - mae: 151245.7969 - mape: 31.5320\nEpoch 56/100\n366/366 [==============================] - 17s 46ms/step - loss: 50598232064.0000 - mae: 150214.2969 - mape: 31.2251\nEpoch 57/100\n366/366 [==============================] - 17s 46ms/step - loss: 49980743680.0000 - mae: 149861.8125 - mape: 31.1001\nEpoch 58/100\n366/366 [==============================] - 17s 47ms/step - loss: 48807186432.0000 - mae: 147966.6562 - mape: 30.8045\nEpoch 59/100\n366/366 [==============================] - 17s 45ms/step - loss: 48567050240.0000 - mae: 147842.1719 - mape: 30.8977\nEpoch 60/100\n366/366 [==============================] - 17s 46ms/step - loss: 49657163776.0000 - mae: 149423.3750 - mape: 31.1374\nEpoch 61/100\n366/366 [==============================] - 17s 45ms/step - loss: 49628168192.0000 - mae: 148800.7812 - mape: 30.9628\nEpoch 62/100\n366/366 [==============================] - 17s 46ms/step - loss: 48483078144.0000 - mae: 147886.4375 - mape: 30.8766\nEpoch 63/100\n366/366 [==============================] - 16s 45ms/step - loss: 49288843264.0000 - mae: 148709.7969 - mape: 30.9721\nEpoch 64/100\n366/366 [==============================] - 17s 46ms/step - loss: 48755896320.0000 - mae: 148102.2656 - mape: 30.7933\nEpoch 65/100\n366/366 [==============================] - 16s 45ms/step - loss: 50899607552.0000 - mae: 152299.8750 - mape: 31.6787\nEpoch 66/100\n366/366 [==============================] - 17s 46ms/step - loss: 49876090880.0000 - mae: 149918.0781 - mape: 31.3017\nEpoch 67/100\n366/366 [==============================] - 16s 45ms/step - loss: 49264373760.0000 - mae: 149116.9844 - mape: 31.0497\nEpoch 68/100\n366/366 [==============================] - 17s 46ms/step - loss: 49121312768.0000 - mae: 149025.1250 - mape: 31.0971\nEpoch 69/100\n366/366 [==============================] - 17s 46ms/step - loss: 48438976512.0000 - mae: 147799.1094 - mape: 30.7722\nEpoch 70/100\n366/366 [==============================] - 17s 46ms/step - loss: 48597807104.0000 - mae: 147828.2188 - mape: 30.7196\nEpoch 71/100\n366/366 [==============================] - 16s 45ms/step - loss: 47966175232.0000 - mae: 146721.4375 - mape: 30.6427\nEpoch 72/100\n366/366 [==============================] - 17s 45ms/step - loss: 47150469120.0000 - mae: 145761.2656 - mape: 30.3817\nEpoch 73/100\n366/366 [==============================] - 17s 46ms/step - loss: 47834292224.0000 - mae: 147156.7344 - mape: 30.6138\nEpoch 74/100\n366/366 [==============================] - 16s 45ms/step - loss: 47446720512.0000 - mae: 146288.9688 - mape: 30.6294\nEpoch 75/100\n366/366 [==============================] - 17s 46ms/step - loss: 47737962496.0000 - mae: 146678.2969 - mape: 30.6998\nEpoch 76/100\n366/366 [==============================] - 16s 45ms/step - loss: 48792641536.0000 - mae: 146996.6250 - mape: 30.5326\nEpoch 77/100\n366/366 [==============================] - 16s 45ms/step - loss: 47456559104.0000 - mae: 146821.5312 - mape: 30.7005\nEpoch 78/100\n366/366 [==============================] - 16s 44ms/step - loss: 47949971456.0000 - mae: 146520.8281 - mape: 30.7185\nEpoch 79/100\n366/366 [==============================] - 17s 46ms/step - loss: 47683354624.0000 - mae: 146883.2031 - mape: 30.5859\nEpoch 80/100\n366/366 [==============================] - 17s 45ms/step - loss: 46874255360.0000 - mae: 146123.2031 - mape: 30.4463\nEpoch 81/100\n366/366 [==============================] - 17s 46ms/step - loss: 47311974400.0000 - mae: 145668.5781 - mape: 30.4624\nEpoch 82/100\n366/366 [==============================] - 17s 45ms/step - loss: 48204165120.0000 - mae: 146307.7969 - mape: 30.5884\nEpoch 83/100\n366/366 [==============================] - 17s 46ms/step - loss: 47673802752.0000 - mae: 145883.3281 - mape: 30.2161\nEpoch 84/100\n366/366 [==============================] - 17s 45ms/step - loss: 48049446912.0000 - mae: 146360.1250 - mape: 30.5417\nEpoch 85/100\n366/366 [==============================] - 17s 46ms/step - loss: 49643520000.0000 - mae: 148736.6719 - mape: 30.9108\nEpoch 86/100\n366/366 [==============================] - 17s 45ms/step - loss: 47815061504.0000 - mae: 146544.1406 - mape: 30.6334\nEpoch 87/100\n366/366 [==============================] - 17s 46ms/step - loss: 45776969728.0000 - mae: 143458.9531 - mape: 29.9738\nEpoch 88/100\n366/366 [==============================] - 17s 45ms/step - loss: 47461105664.0000 - mae: 146145.7188 - mape: 30.4560\nEpoch 89/100\n366/366 [==============================] - 17s 46ms/step - loss: 48857231360.0000 - mae: 148520.7500 - mape: 30.9440\nEpoch 90/100\n366/366 [==============================] - 17s 45ms/step - loss: 47369613312.0000 - mae: 146762.2031 - mape: 30.5846\nEpoch 91/100\n366/366 [==============================] - 17s 46ms/step - loss: 48144945152.0000 - mae: 146736.7344 - mape: 30.5413\nEpoch 92/100\n366/366 [==============================] - 17s 45ms/step - loss: 47320928256.0000 - mae: 145646.4844 - mape: 30.5597\nEpoch 93/100\n366/366 [==============================] - 17s 46ms/step - loss: 48501112832.0000 - mae: 147163.0312 - mape: 30.4925\nEpoch 94/100\n366/366 [==============================] - 17s 47ms/step - loss: 47523864576.0000 - mae: 146369.0000 - mape: 30.6253\nEpoch 95/100\n366/366 [==============================] - 17s 46ms/step - loss: 47365890048.0000 - mae: 145908.3281 - mape: 30.3613\nEpoch 96/100\n366/366 [==============================] - 17s 47ms/step - loss: 48067026944.0000 - mae: 147685.2812 - mape: 30.8465\nEpoch 97/100\n366/366 [==============================] - 17s 46ms/step - loss: 46995382272.0000 - mae: 144759.7656 - mape: 30.0176\nEpoch 98/100\n366/366 [==============================] - 17s 47ms/step - loss: 47644745728.0000 - mae: 145431.8906 - mape: 30.2770\nEpoch 99/100\n366/366 [==============================] - 17s 45ms/step - loss: 47526211584.0000 - mae: 145179.2656 - mape: 30.2312\nEpoch 100/100\n366/366 [==============================] - 17s 46ms/step - loss: 46654083072.0000 - mae: 144744.7188 - mape: 30.1700\n","output_type":"stream"}]},{"cell_type":"code","source":"y_pred = model.predict(X_test)","metadata":{"execution":{"iopub.status.busy":"2023-05-10T05:03:06.674402Z","iopub.execute_input":"2023-05-10T05:03:06.674852Z","iopub.status.idle":"2023-05-10T05:03:07.732822Z","shell.execute_reply.started":"2023-05-10T05:03:06.674819Z","shell.execute_reply":"2023-05-10T05:03:07.731465Z"},"trusted":true},"execution_count":14,"outputs":[{"name":"stdout","text":"92/92 [==============================] - 1s 8ms/step\n","output_type":"stream"}]},{"cell_type":"code","source":"y_pred","metadata":{"execution":{"iopub.status.busy":"2023-05-10T05:03:29.965381Z","iopub.execute_input":"2023-05-10T05:03:29.965825Z","iopub.status.idle":"2023-05-10T05:03:29.974756Z","shell.execute_reply.started":"2023-05-10T05:03:29.965792Z","shell.execute_reply":"2023-05-10T05:03:29.973130Z"},"trusted":true},"execution_count":15,"outputs":[{"execution_count":15,"output_type":"execute_result","data":{"text/plain":"array([[343838.1 ],\n       [396782.66],\n       [299037.  ],\n       ...,\n       [347119.97],\n       [298119.28],\n       [478355.53]], dtype=float32)"},"metadata":{}}]},{"cell_type":"code","source":"y_test","metadata":{"execution":{"iopub.status.busy":"2023-05-10T05:04:02.924406Z","iopub.execute_input":"2023-05-10T05:04:02.925022Z","iopub.status.idle":"2023-05-10T05:04:02.933761Z","shell.execute_reply.started":"2023-05-10T05:04:02.924989Z","shell.execute_reply":"2023-05-10T05:04:02.932334Z"},"trusted":true},"execution_count":16,"outputs":[{"execution_count":16,"output_type":"execute_result","data":{"text/plain":"12149    640000\n13581    650000\n11595    325000\n2769     373000\n7393     355000\n          ...  \n7362     497000\n11132    400000\n142      366750\n1405     276000\n6184     569000\nName: Price, Length: 2924, dtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"plt.scatter(y_test, y_pred, c=y_pred)\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2023-05-10T05:04:31.766565Z","iopub.execute_input":"2023-05-10T05:04:31.767027Z","iopub.status.idle":"2023-05-10T05:04:32.062809Z","shell.execute_reply.started":"2023-05-10T05:04:31.766991Z","shell.execute_reply":"2023-05-10T05:04:32.061414Z"},"trusted":true},"execution_count":17,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"code","source":"pd.DataFrame({'Actual Value':y_test.values.flatten(), 'Predicted Value':y_pred.flatten()})","metadata":{"execution":{"iopub.status.busy":"2023-05-10T05:04:53.880031Z","iopub.execute_input":"2023-05-10T05:04:53.880566Z","iopub.status.idle":"2023-05-10T05:04:53.898386Z","shell.execute_reply.started":"2023-05-10T05:04:53.880525Z","shell.execute_reply":"2023-05-10T05:04:53.897125Z"},"trusted":true},"execution_count":18,"outputs":[{"execution_count":18,"output_type":"execute_result","data":{"text/plain":"      Actual Value  Predicted Value\n0           640000     343838.09375\n1           650000     396782.65625\n2           325000     299037.00000\n3           373000     406112.84375\n4           355000     478748.71875\n...            ...              ...\n2919        497000     553630.43750\n2920        400000     333243.21875\n2921        366750     347119.96875\n2922        276000     298119.28125\n2923        569000     478355.53125\n\n[2924 rows x 2 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Actual Value</th>\n      <th>Predicted Value</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>640000</td>\n      <td>343838.09375</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>650000</td>\n      <td>396782.65625</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>325000</td>\n      <td>299037.00000</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>373000</td>\n      <td>406112.84375</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>355000</td>\n      <td>478748.71875</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>2919</th>\n      <td>497000</td>\n      <td>553630.43750</td>\n    </tr>\n    <tr>\n      <th>2920</th>\n      <td>400000</td>\n      <td>333243.21875</td>\n    </tr>\n    <tr>\n      <th>2921</th>\n      <td>366750</td>\n      <td>347119.96875</td>\n    </tr>\n    <tr>\n      <th>2922</th>\n      <td>276000</td>\n      <td>298119.28125</td>\n    </tr>\n    <tr>\n      <th>2923</th>\n      <td>569000</td>\n      <td>478355.53125</td>\n    </tr>\n  </tbody>\n</table>\n<p>2924 rows Ã— 2 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"r2_score(y_pred=y_pred, y_true=y_test) * 100","metadata":{"execution":{"iopub.status.busy":"2023-05-10T05:05:13.037561Z","iopub.execute_input":"2023-05-10T05:05:13.038027Z","iopub.status.idle":"2023-05-10T05:05:13.048720Z","shell.execute_reply.started":"2023-05-10T05:05:13.037998Z","shell.execute_reply":"2023-05-10T05:05:13.047398Z"},"trusted":true},"execution_count":19,"outputs":[{"execution_count":19,"output_type":"execute_result","data":{"text/plain":"63.57906811221425"},"metadata":{}}]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}